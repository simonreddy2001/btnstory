{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Documents/GitHub/btnstory/src/components/form/SignupForm.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './SignupForm.styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationPatterns = {\n  name: /^[a-zA-Z\\s]+$/,\n  email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  mobile: /^((\\(?\\+45\\)?)?)(\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2})$/,\n  street: /^((.){1,}(\\d){1,}(.){0,})$/,\n  zipCode: /^[D-d][K-k]( |-)[1-9]{1}[0-9]{3}$/\n};\nconst errorMessage = {\n  required: 'is required',\n  name: 'Name can not include Number',\n  email: 'Please enter a valid email address: example@domain.com',\n  mobile: 'Please enter a valid mobile number:  (+45) 35 35 35 35 ||| +45 35 35 35 35 ||| 35 35 35 35 ||| 35353535',\n  streetName: 'Please enter a valid address: Teststreet 32 | Tørststræde 4 | Tørststræde 24 1. tv',\n  city: 'City name is required',\n  zipCode: 'Please enter a valid zipCode: DK-1234|||dk 1234|||Dk-1234'\n};\nexport const SignupForm = ({\n  text,\n  label,\n  handlePost\n}) => {\n  _s();\n\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    streetName: '',\n    city: '',\n    zipCode: ''\n  });\n  const [isMessageSent, setIsMessageSent] = useState(false);\n  const [isAllInputProvided, setIsAllInputProvided] = useState(false);\n  const [errors, setErrors] = useState({\n    required: 'is required',\n    name: 'Name can not include Number',\n    email: 'Please enter a valid email address: example@domain.com',\n    mobile: 'Please enter a valid mobile number:  (+45) 35 35 35 35 ||| +45 35 35 35 35 ||| 35 35 35 35 ||| 35353535',\n    streetName: 'Please enter a valid address: Teststreet 32 | Tørststræde 4 | Tørststræde 24 1. tv',\n    city: 'City name is required',\n    zipCode: 'Please enter a valid zipCode: DK-1234|||dk 1234|||Dk-1234'\n  });\n  useEffect(() => {\n    if (formState.name && formState.email && formState.mobile && formState.streetName && formState.city && formState.zipCode) {\n      setIsAllInputProvided(true);\n    } else {\n      setIsAllInputProvided(false);\n    }\n  }, [formState]);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState({ ...formState,\n      [name]: value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = [];\n    errors = Object.keys(formState).map(key => {\n      const error = {\n        field: key,\n        message: ''\n      };\n\n      if (!formState[key]) {\n        error.message = `${[key]} ${errorMessage.required}`;\n      } else if (Object.prototype.hasOwnProperty.call(validationPatterns, `${key}`)) {\n        if (!formState[key].match(validationPatterns[key])) {\n          error.message = errorMessage[key];\n        }\n      }\n\n      return error;\n    });\n    setErrors(errors);\n\n    if (errors.filter(err => err.message !== '').length === 0) {\n      handlePost(formState.name, formState.email, formState.mobile, formState.streetName, formState.city, formState.zipCode);\n      setIsMessageSent(true);\n      setFormState({\n        name: '',\n        email: '',\n        mobile: '',\n        streetName: '',\n        city: '',\n        zipCode: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-outer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"signupForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: [isMessageSent ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"successMsg\",\n              children: \"Yor data submitted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"errorMsg\",\n              children: errors.map(error => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: error.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [\"name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"name\",\n                name: \"name\",\n                value: formState.name,\n                placeholder: \"type your name\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: [\"email \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                name: \"email\",\n                value: formState.email,\n                placeholder: \"type your email\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"mobile\",\n                children: [\"mobile \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"mobile\",\n                name: \"mobile\",\n                value: formState.mobile,\n                placeholder: \"type your mobile\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.mobile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" DELIVERY ADDRESS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"streetName\",\n                children: [\"street name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"streetName\",\n                name: \"streetName\",\n                value: formState.streetName,\n                placeholder: \"type your street name\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.streetName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"city\",\n                children: [\"city \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"city\",\n                name: \"city\",\n                value: formState.city,\n                placeholder: \"type your city name\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.city\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"zipCode\",\n                children: [\"zip code \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"requiredStar\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"zipCode\",\n                name: \"zipCode\",\n                value: formState.zipCode,\n                placeholder: \"type your zip-code\",\n                onChange: handleChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-danger\",\n                  children: errors.zipCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: isAllInputProvided ? 'allInputProvided' : 'notAllInputProvided',\n                type: \"submit\",\n                label: label,\n                onClick: handleSubmit,\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"AZ1I1LMGA9AfVKQpItK6IGHI7Cg=\");\n\n_c = SignupForm;\nSignupForm.propTypes = {\n  text: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  handlePost: PropTypes.func\n};\nSignupForm.defaultProps = {\n  text: null,\n  handlePost: () => {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");\nSignupForm.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SignupForm\",\n  \"props\": {\n    \"text\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlePost\": {\n      \"defaultValue\": {\n        \"value\": \"() => { }\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/form/SignupForm.component.js\"] = {\n    name: \"SignupForm\",\n    docgenInfo: SignupForm.__docgenInfo,\n    path: \"src/components/form/SignupForm.component.js\"\n  };\n}","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/btnstory/src/components/form/SignupForm.component.js"],"names":["React","useState","useEffect","PropTypes","validationPatterns","name","email","mobile","street","zipCode","errorMessage","required","streetName","city","SignupForm","text","label","handlePost","formState","setFormState","isMessageSent","setIsMessageSent","isAllInputProvided","setIsAllInputProvided","errors","setErrors","handleChange","e","value","target","trim","handleSubmit","preventDefault","Object","keys","map","key","error","field","message","prototype","hasOwnProperty","call","match","filter","err","length","propTypes","string","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './SignupForm.styles.css';\n\nconst validationPatterns = {\n  name: /^[a-zA-Z\\s]+$/,\n  email:\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  mobile: /^((\\(?\\+45\\)?)?)(\\s?\\d{2}\\s?\\d{2}\\s?\\d{2}\\s?\\d{2})$/,\n  street: /^((.){1,}(\\d){1,}(.){0,})$/,\n  zipCode: /^[D-d][K-k]( |-)[1-9]{1}[0-9]{3}$/,\n};\n\nconst errorMessage = {\n  required: 'is required',\n  name: 'Name can not include Number',\n  email: 'Please enter a valid email address: example@domain.com',\n  mobile:\n    'Please enter a valid mobile number:  (+45) 35 35 35 35 ||| +45 35 35 35 35 ||| 35 35 35 35 ||| 35353535',\n  streetName:\n    'Please enter a valid address: Teststreet 32 | Tørststræde 4 | Tørststræde 24 1. tv',\n  city: 'City name is required',\n  zipCode: 'Please enter a valid zipCode: DK-1234|||dk 1234|||Dk-1234',\n};\n\nexport const SignupForm = ({ text, label, handlePost }) => {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    mobile: '',\n    streetName: '',\n    city: '',\n    zipCode: '',\n  });\n\n  const [isMessageSent, setIsMessageSent] = useState(false);\n  const [isAllInputProvided, setIsAllInputProvided] = useState(false);\n  const [errors, setErrors] = useState({\n    required: 'is required',\n    name: 'Name can not include Number',\n    email: 'Please enter a valid email address: example@domain.com',\n    mobile:\n      'Please enter a valid mobile number:  (+45) 35 35 35 35 ||| +45 35 35 35 35 ||| 35 35 35 35 ||| 35353535',\n    streetName:\n      'Please enter a valid address: Teststreet 32 | Tørststræde 4 | Tørststræde 24 1. tv',\n    city: 'City name is required',\n    zipCode: 'Please enter a valid zipCode: DK-1234|||dk 1234|||Dk-1234',\n  });\n\n  useEffect(() => {\n    if (\n      formState.name &&\n      formState.email &&\n      formState.mobile &&\n      formState.streetName &&\n      formState.city &&\n      formState.zipCode\n    ) {\n      setIsAllInputProvided(true);\n    } else {\n      setIsAllInputProvided(false);\n    }\n  }, [formState]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormState({ ...formState, [name]: value.trim() });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let errors = [];\n    errors = Object.keys(formState).map((key) => {\n      const error = {\n        field: key,\n        message: '',\n      };\n      if (!formState[key]) {\n        error.message = `${[key]} ${errorMessage.required}`;\n      } else if (\n        Object.prototype.hasOwnProperty.call(validationPatterns, `${key}`)\n      ) {\n        if (!formState[key].match(validationPatterns[key])) {\n          error.message = errorMessage[key];\n        }\n      }\n      return error;\n    });\n    setErrors(errors);\n\n    if (errors.filter((err) => err.message !== '').length === 0) {\n      handlePost(\n        formState.name,\n        formState.email,\n        formState.mobile,\n        formState.streetName,\n        formState.city,\n        formState.zipCode,\n      );\n      setIsMessageSent(true);\n      setFormState({\n        name: '',\n        email: '',\n        mobile: '',\n        streetName: '',\n        city: '',\n        zipCode: '',\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"signup-form-container\">\n        <div className=\"wrapper-outer\">\n          <form id=\"signupForm\">\n            <div className=\"wrapper\">\n              {isMessageSent ? (\n                <p className=\"successMsg\">Yor data submitted</p>\n              ) : (\n                <div className=\"errorMsg\">\n                  {errors.map((error) => (\n                    <p>{error.message}</p>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"form-row\">\n                <label htmlFor=\"name\">\n                  name <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formState.name}\n                  placeholder=\"type your name\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.name}</span>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"email\">\n                  email <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formState.email}\n                  placeholder=\"type your email\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.email}</span>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"mobile\">\n                  mobile <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"tel\"\n                  id=\"mobile\"\n                  name=\"mobile\"\n                  value={formState.mobile}\n                  placeholder=\"type your mobile\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.mobile}</span>\n                </div>\n              </div>\n\n              <p> DELIVERY ADDRESS</p>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"streetName\">\n                  street name <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"streetName\"\n                  name=\"streetName\"\n                  value={formState.streetName}\n                  placeholder=\"type your street name\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.streetName}</span>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"city\">\n                  city <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"city\"\n                  name=\"city\"\n                  value={formState.city}\n                  placeholder=\"type your city name\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.city}</span>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <label htmlFor=\"zipCode\">\n                  zip code <span className=\"requiredStar\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"zipCode\"\n                  name=\"zipCode\"\n                  value={formState.zipCode}\n                  placeholder=\"type your zip-code\"\n                  onChange={handleChange}\n                  required\n                />\n                <div>\n                  <span className=\"text-danger\">{errors.zipCode}</span>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <button\n                  className={\n                    isAllInputProvided\n                      ? 'allInputProvided'\n                      : 'notAllInputProvided'\n                  }\n                  type=\"submit\"\n                  label={label}\n                  onClick={handleSubmit}\n                >\n                  {text}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSignupForm.propTypes = {\n  text: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  handlePost: PropTypes.func,\n};\n\nSignupForm.defaultProps = {\n  text: null,\n  handlePost: () => { },\n};\n"]},"metadata":{},"sourceType":"module"}