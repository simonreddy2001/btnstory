{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Documents/GitHub/btnstory/src/stories/Stack.stories.js\";\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import Stack from \\\"../components/Stack\\\"\\n\\nexport default {\\n    title: \\\"Components/Stack\\\",\\n    component: Stack,\\n    argTypes: {\\n        numberOfChildren: { type: \\\"number\\\", defaultValue: 4 },\\n    },\\n}\\n\\nconst Template = ({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\\n\\nexport const Horizontal = Template.bind({})\\nHorizontal.args = {\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\\n\\nexport const Vertical = Template.bind({})\\nVertical.args = {\\n    direction: \\\"column\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\\n\\nexport const NoSpacing = Template.bind({})\\nNoSpacing.args = {\\n    direction: \\\"row\\\",\\n    spacing: 0,\\n    wrap: false,\\n}\\n\\nexport const WrapOverflow = Template.bind({})\\nWrapOverflow.args = {\\n    numberOfChildren: 40,\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: true,\\n}\\n\\nexport const Empty = Template.bind({})\\nEmpty.args = {\\n    numberOfChildren: 0,\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Horizontal\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 28\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 28\n    }\n  },\n  \"Vertical\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 28\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 28\n    }\n  },\n  \"NoSpacing\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 28\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 28\n    }\n  },\n  \"WrapOverflow\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 28\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 28\n    }\n  },\n  \"Empty\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 28\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 11\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 28\n    }\n  }\n};\nimport Stack from \"../components/Stack\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: \"Components/Stack\",\n  component: Stack,\n  argTypes: {\n    numberOfChildren: {\n      type: \"number\",\n      defaultValue: 4\n    }\n  }\n};\n\nconst Template = ({\n  numberOfChildren,\n  ...args\n}) => /*#__PURE__*/_jsxDEV(Stack, { ...args,\n  children: [...Array(numberOfChildren).keys()].map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"50px\",\n      height: \"50px\",\n      backgroundColor: \"red\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: n + 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 5\n}, this);\n\n_c = Template;\nexport const Horizontal = Template.bind({});\nHorizontal.args = {\n  direction: \"row\",\n  spacing: 2,\n  wrap: false\n};\nexport const Vertical = Template.bind({});\nVertical.args = {\n  direction: \"column\",\n  spacing: 2,\n  wrap: false\n};\nexport const NoSpacing = Template.bind({});\nNoSpacing.args = {\n  direction: \"row\",\n  spacing: 0,\n  wrap: false\n};\nexport const WrapOverflow = Template.bind({});\nWrapOverflow.args = {\n  numberOfChildren: 40,\n  direction: \"row\",\n  spacing: 2,\n  wrap: true\n};\nexport const Empty = Template.bind({});\nEmpty.args = {\n  numberOfChildren: 0,\n  direction: \"row\",\n  spacing: 2,\n  wrap: false\n};\nHorizontal.parameters = {\n  storySource: {\n    source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\"\n  },\n  ...Horizontal.parameters\n};\nVertical.parameters = {\n  storySource: {\n    source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\"\n  },\n  ...Vertical.parameters\n};\nNoSpacing.parameters = {\n  storySource: {\n    source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\"\n  },\n  ...NoSpacing.parameters\n};\nWrapOverflow.parameters = {\n  storySource: {\n    source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\"\n  },\n  ...WrapOverflow.parameters\n};\nEmpty.parameters = {\n  storySource: {\n    source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\"\n  },\n  ...Empty.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["/Users/simon/Documents/GitHub/btnstory/src/stories/Stack.stories.js"],"names":["__STORY__","__LOCATIONS_MAP__","Stack","title","component","argTypes","numberOfChildren","type","defaultValue","Template","args","Array","keys","map","n","width","height","backgroundColor","display","justifyContent","alignItems","Horizontal","bind","direction","spacing","wrap","Vertical","NoSpacing","WrapOverflow","Empty","parameters","storySource","source"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import Stack from \\\"../components/Stack\\\"\\n\\nexport default {\\n    title: \\\"Components/Stack\\\",\\n    component: Stack,\\n    argTypes: {\\n        numberOfChildren: { type: \\\"number\\\", defaultValue: 4 },\\n    },\\n}\\n\\nconst Template = ({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\\n\\nexport const Horizontal = Template.bind({})\\nHorizontal.args = {\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\\n\\nexport const Vertical = Template.bind({})\\nVertical.args = {\\n    direction: \\\"column\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\\n\\nexport const NoSpacing = Template.bind({})\\nNoSpacing.args = {\\n    direction: \\\"row\\\",\\n    spacing: 0,\\n    wrap: false,\\n}\\n\\nexport const WrapOverflow = Template.bind({})\\nWrapOverflow.args = {\\n    numberOfChildren: 40,\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: true,\\n}\\n\\nexport const Empty = Template.bind({})\\nEmpty.args = {\\n    numberOfChildren: 0,\\n    direction: \\\"row\\\",\\n    spacing: 2,\\n    wrap: false,\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Horizontal\":{\"startLoc\":{\"col\":17,\"line\":11},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":17,\"line\":11},\"endBody\":{\"col\":1,\"line\":28}},\"Vertical\":{\"startLoc\":{\"col\":17,\"line\":11},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":17,\"line\":11},\"endBody\":{\"col\":1,\"line\":28}},\"NoSpacing\":{\"startLoc\":{\"col\":17,\"line\":11},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":17,\"line\":11},\"endBody\":{\"col\":1,\"line\":28}},\"WrapOverflow\":{\"startLoc\":{\"col\":17,\"line\":11},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":17,\"line\":11},\"endBody\":{\"col\":1,\"line\":28}},\"Empty\":{\"startLoc\":{\"col\":17,\"line\":11},\"endLoc\":{\"col\":1,\"line\":28},\"startBody\":{\"col\":17,\"line\":11},\"endBody\":{\"col\":1,\"line\":28}}};\n    \nimport Stack from \"../components/Stack\"\n\nexport default {\n    title: \"Components/Stack\",\n    component: Stack,\n    argTypes: {\n        numberOfChildren: { type: \"number\", defaultValue: 4 },\n    },\n}\n\nconst Template = ({ numberOfChildren, ...args }) => (\n    <Stack {...args}>\n        {[...Array(numberOfChildren).keys()].map(n => (\n            <div\n                style={{\n                    width: \"50px\",\n                    height: \"50px\",\n                    backgroundColor: \"red\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                {n + 1}\n            </div>\n        ))}\n    </Stack>\n)\n\nexport const Horizontal = Template.bind({});\nHorizontal.args = {\n    direction: \"row\",\n    spacing: 2,\n    wrap: false,\n}\n\nexport const Vertical = Template.bind({});\nVertical.args = {\n    direction: \"column\",\n    spacing: 2,\n    wrap: false,\n}\n\nexport const NoSpacing = Template.bind({});\nNoSpacing.args = {\n    direction: \"row\",\n    spacing: 0,\n    wrap: false,\n}\n\nexport const WrapOverflow = Template.bind({});\nWrapOverflow.args = {\n    numberOfChildren: 40,\n    direction: \"row\",\n    spacing: 2,\n    wrap: true,\n}\n\nexport const Empty = Template.bind({});Empty.args = {\n    numberOfChildren: 0,\n    direction: \"row\",\n    spacing: 2,\n    wrap: false,\n}\n\n\nHorizontal.parameters = { storySource: { source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\" }, ...Horizontal.parameters };\nVertical.parameters = { storySource: { source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\" }, ...Vertical.parameters };\nNoSpacing.parameters = { storySource: { source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\" }, ...NoSpacing.parameters };\nWrapOverflow.parameters = { storySource: { source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\" }, ...WrapOverflow.parameters };\nEmpty.parameters = { storySource: { source: \"({ numberOfChildren, ...args }) => (\\n    <Stack {...args}>\\n        {[...Array(numberOfChildren).keys()].map(n => (\\n            <div\\n                style={{\\n                    width: \\\"50px\\\",\\n                    height: \\\"50px\\\",\\n                    backgroundColor: \\\"red\\\",\\n                    display: \\\"flex\\\",\\n                    justifyContent: \\\"center\\\",\\n                    alignItems: \\\"center\\\",\\n                }}\\n            >\\n                {n + 1}\\n            </div>\\n        ))}\\n    </Stack>\\n)\" }, ...Empty.parameters };"]},"metadata":{},"sourceType":"module"}